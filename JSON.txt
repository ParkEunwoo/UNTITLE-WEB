JSON (JavaScript Object Notation) : 객체 문법으로 구조화된 데이터를 표현하기 위한 문자 기반의 표준 포맷이다.
웹 어플리케이션에서 데이터를 전송시 사용한다 : 서버에서 클라이언트로 데이터 전송 혹은 그 반대
->인터넷에서 자료를 주고 받을 때 그 자료를 표현하는 방법

Javascript 객체 리터럴 문법을 따르는 문자열이라 javascript의 기본 데이터 타입을 사용 할 수 있다. 이를 통해 데이터 계층을 구축할 수 있다.
순수한 데이터 포맷이라 프로퍼티만 담을 수 있다. (메서드 불가)
확장자 : .json

JSONLint을 이용하면 JSON 유효성 검사(디버그)를 할 수 있다.
모든 형태의 데이터 타입을 취할 수 있다.
->배열, 오브젝트 외에도 문자열, 숫자 또한 JSON 오브젝트가 된다.

장점
1. 사람이 읽고 쓰기에 용이/ 기계가 분석하고 생성하기에도 용이
2. Javascript가 아니어도 다수의 프로그래밍 환경에서 사용 가능.
3. 문자열 형태라 네트워크를 통해 전송할 때 유용
-> 네트워크를 통해 전달할 때 객체를 문자열로 변환한느 과정은 문자열화 (Stringification)

단점
데이터를 사용하려면 네이티브 JSON 객체로 변환해야함 (Parsing)
-> 큰 문제는 아니다 : Javascript가 해결해줌
언어로 부터 독립적이지만, C-family, Java, JavaScript, Perl, Python 등 친숙한 텍스트 형식

두 개의 구조
1.name/value 형태의 쌍으로 collection 타입. 다양한 언어들에서, 이는 object, record, struct(구조체), dictionary, hash table, 키가 있는 list, 또는 연상배열로서 실현 되었다.
2.값들의 순서화된 리스트. 대부분의 언어들에서, 이는 array, vector, list, 또는 sequence로서 실현 되었다.



Object : name/value 쌍들의 비순서화된 SET
 시작: { , 끝: } // 각 name 뒤에 :을 붙이고 ,로 쌍들을 구분

array:순서화된 collection
 시작: { , 끝: } // 각 name 뒤에 :을 붙이고 ,로 쌍들을 구분

value : ""내에 string, number, true, false, null, object, array

