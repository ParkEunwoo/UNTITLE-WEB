<프론트엔드 framework>
1.정의
  프레임워크는 하나의 애플리케이션을 구축할 때 모든 애플리케이션의 공통적인 개발 환경을 제공. 
  개발에 필요한 화면구현, DB연동, 개발환경들의 공통적인 부분을 제공함으로써 개발 시간과 (인력)비용을 절감. (프레임워크란?)
  따라서 프런트엔드 프레임워크는 개발자가 애플리케이션을 더 쉽게 개발할 수 있도록 HTML, CSS 및 JavaScript를 구성하는 방법에 대한 규칙을 제공.
2.종류
  A.  Bootstrap
    - jQuery 기반의 오픈 소스 웹 프레임워크.
    - 버튼, 입력창 등의 디자인을 CSS와 Javascript로 만들어 놓은 것.
    - 글자, 인용문, 목록, 표, 입력폼, 버튼, 이미지, 아이콘, 드롭다운 메뉴, 탭, 리스트, 메뉴바, 페이지 이동 바, 알림 메시지. 썸네일, 진행 바 등의 웹 페이지에서 많이 쓰이는 요소를 거의 전부 내장.
    -반응형 웹 디자인을 지원
      →PC용, 모바일용 디자인을 모두 지원
        웹 브라우저 크기에 따라 자동으로 정렬되는 ‘그리도 시스템”을 채용
        즉, 하나의 웹 페이지를 데스크톱, 테블릿, 스마트폰 모두에서 무리없이 보게  만들 수 있음..
    - Bootstrap는 파일을 다운로드하여 직접 Web 사이트에 통합하여 사용하는 방법이 있고 CDN (Contents Delivery Network)을 이용하여 온라인상에서 파일을 다운로드하고 사용하는 방법이 있음.
  B.  Angular.js
    - SPA(Single Page Application) 프레임워크
    - SPA란? : 하나의 웹 페이지가 실행할 때 View 단에 해당되는 부분이 페이지의 주소가 바뀌지 않으면서 또 다른 새로운 view 를  동적으로 로드하여  사용하는 것을 SPA 라고 함
       → SPA 를 편하게 사용하도록 도움을 주는 것이 AngularJS 와 같은 자바스크립트 프레임워크
    - MV* 오픈소스 프레임워크
  C.  Vue.js
    - MVVM
    - 만든 UI구성요소를 조합하여 페이지를 구성하는 것을 전제로 함
3. 장점
  A.체계적인 코드로 유지보수에 용이함
  B.기본설계와 필요한 라이브러리를 제공하고, 코드의 재사용으로 생산성이 향상됨
4. 단점
  A. 프레임워크를 이해하는데 오래 걸릴 수 있음
  B. 이미 설계된 구조에 작업을 해서 자유로운 개발에 한계가 있음
5. 사용해야하는 이유
  A. 유지보수가 쉽다.
  B. 개발에 편리하다.
